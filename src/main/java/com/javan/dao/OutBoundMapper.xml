<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.javan.dao.OutBoundMapper" >
  <resultMap id="BaseResultMap" type="com.javan.entity.OutBound" >
    <id column="outbound_id" property="outbound_id" jdbcType="INTEGER" />
    <result column="furniture_id" property="furniture_id" jdbcType="INTEGER" />
    <result column="amount" property="amount" jdbcType="INTEGER" />
    <result column="warehouse_id" property="warehouse_id" jdbcType="VARCHAR" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    outbound_id, furniture_id, amount, warehouse_id, date
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.javan.entity.OutBoundExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from outbound
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from outbound
    where outbound_id = #{outbound_id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from outbound
    where outbound_id = #{outbound_id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.javan.entity.OutBoundExample" >
    delete from outbound
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.javan.entity.OutBound" >
    insert into outbound (outbound_id, furniture_id, amount, 
      warehouse_id, date)
    values (#{outbound_id,jdbcType=INTEGER}, #{furniture_id,jdbcType=INTEGER}, #{amount,jdbcType=INTEGER}, 
      #{warehouse_id,jdbcType=VARCHAR}, #{date,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.javan.entity.OutBound" >
    insert into outbound
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="outbound_id != null" >
        outbound_id,
      </if>
      <if test="furniture_id != null" >
        furniture_id,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="warehouse_id != null" >
        warehouse_id,
      </if>
      <if test="date != null" >
        date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="outbound_id != null" >
        #{outbound_id,jdbcType=INTEGER},
      </if>
      <if test="furniture_id != null" >
        #{furniture_id,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="warehouse_id != null" >
        #{warehouse_id,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        #{date,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.javan.entity.OutBoundExample" resultType="java.lang.Integer" >
    select count(*) from outbound
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update outbound
    <set >
      <if test="record.outbound_id != null" >
        outbound_id = #{record.outbound_id,jdbcType=INTEGER},
      </if>
      <if test="record.furniture_id != null" >
        furniture_id = #{record.furniture_id,jdbcType=INTEGER},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=INTEGER},
      </if>
      <if test="record.warehouse_id != null" >
        warehouse_id = #{record.warehouse_id,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null" >
        date = #{record.date,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update outbound
    set outbound_id = #{record.outbound_id,jdbcType=INTEGER},
      furniture_id = #{record.furniture_id,jdbcType=INTEGER},
      amount = #{record.amount,jdbcType=INTEGER},
      warehouse_id = #{record.warehouse_id,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.javan.entity.OutBound" >
    update outbound
    <set >
      <if test="furniture_id != null" >
        furniture_id = #{furniture_id,jdbcType=INTEGER},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="warehouse_id != null" >
        warehouse_id = #{warehouse_id,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=TIMESTAMP},
      </if>
    </set>
    where outbound_id = #{outbound_id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.javan.entity.OutBound" >
    update outbound
    set furniture_id = #{furniture_id,jdbcType=INTEGER},
      amount = #{amount,jdbcType=INTEGER},
      warehouse_id = #{warehouse_id,jdbcType=VARCHAR},
      date = #{date,jdbcType=TIMESTAMP}
    where outbound_id = #{outbound_id,jdbcType=INTEGER}
  </update>
</mapper>